# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-20 07:20
from __future__ import unicode_literals

from django.db import migrations, models
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('patient_id', models.CharField(max_length=10, unique=True, verbose_name='Patient ID')),
                ('status', models.CharField(choices=[('PR', 'Present'), ('TEMP', 'Temporary released')], default='PR', max_length=7, verbose_name='Status')),
                ('full_name', models.CharField(db_index=True, max_length=255, verbose_name='Full name')),
                ('card_number', models.CharField(max_length=255, verbose_name='Identity Card Number')),
                ('card_type', models.CharField(choices=[('CHI', 'Child'), ('SPO', 'Spouse'), ('B/S', 'Brother/sister'), ('PAR', 'Parent')], max_length=7, verbose_name='Identity Card Type')),
                ('document_type', models.CharField(choices=[('B_ID', 'Belgian identity card'), ('B_FN', 'Belgian card of foreign resident'), ('FN_ID', 'Foreign identity card')], max_length=7, verbose_name='Identity Document Type')),
                ('language', models.CharField(choices=[('E', 'English'), ('C', 'Chinese'), ('G', 'German'), ('S', 'Spanish'), ('I', 'Italian'), ('J', 'Japanise'), ('D', 'Dutch)')], max_length=7, verbose_name='Language')),
                ('birth_date', models.DateField(verbose_name='Birth Date')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('I', 'Indeterminate'), ('M', 'Male')], db_index=True, max_length=7, verbose_name='Gender')),
                ('marital_status', models.CharField(choices=[('SI', 'Single'), ('D', 'Divorced'), ('H', 'Co-habitant'), ('U', 'Unknown'), ('SE', 'Separated'), ('W', 'Widowed')], max_length=7, verbose_name='Marital Status')),
                ('partner_name', models.CharField(max_length=128, verbose_name="Partner's Name")),
                ('nationality', models.CharField(max_length=255, verbose_name='Nationality')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('post_code', models.CharField(max_length=255, verbose_name='Post Code')),
                ('national_register', models.CharField(max_length=255, verbose_name='National Register')),
                ('foreign_register', models.CharField(max_length=255, verbose_name='Foreign Register')),
                ('phone_number', models.CharField(max_length=128, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=128, verbose_name='E-mail Address')),
                ('is_vip', models.BooleanField(default=False, verbose_name='Confidential(VIP)')),
                ('religion', models.CharField(choices=[('ADV', 'Adventist'), ('AOG', 'Assembly of God'), ('BAP', 'Baptist'), ('BUD', 'Buddhist'), ('CAT', 'Catolic'), ('JSH', "Jehovan's Witness"), ('LUT', 'Lutheran'), ('MRN', 'Mormon'), ('NO', 'None'), ('ORT', 'Orthodox'), ('OTH', 'Other'), ('OTH', 'Other'), ('PST', 'Protestant'), ('QUA', 'Quaker')], max_length=7, verbose_name='Religion')),
                ('general_practitioner', models.CharField(max_length=128, verbose_name='General Practitioner')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Date of Death')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('insurance_policy', models.CharField(blank=True, max_length=128, null=True, verbose_name='Health Insurance Policy')),
                ('policy_holder', models.CharField(blank=True, max_length=128, null=True, verbose_name='Policy Holder Name')),
                ('validity_end', models.DateField(blank=True, null=True, verbose_name='End of Validity Period')),
                ('beneficiary_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='Beneficiary ID')),
                ('beneficiary_occupation', models.CharField(blank=True, choices=[('PH', 'Policyholder'), ('PTR', 'Partner'), ('PRT', 'Parent'), ('CH', 'Child'), ('OTH', 'Other beneficiary')], max_length=7, null=True, verbose_name='Beneficiary occupation')),
                ('heading_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='Heading Code HC1/HC2')),
                ('is_employed', models.BooleanField(default=False, verbose_name='Employed/Unemployed')),
                ('dependants', models.CharField(blank=True, choices=[('NO', 'No dependants'), ('WITH', 'With dependants')], max_length=7, null=True, verbose_name='Dependants')),
                ('is_third_party_auth', models.BooleanField(default=False, verbose_name='Authorised Third Party')),
                ('disability_recognition', models.BooleanField(default=False, verbose_name='Federal Disability Recognition')),
                ('regional_recognition', models.BooleanField(default=True, verbose_name='Regional Disability Recognition')),
                ('disability_assessment_points', models.CharField(blank=True, max_length=255, null=True, verbose_name='Disability Assessment points')),
                ('income_origin', models.CharField(blank=True, choices=[('WRK', 'Work income'), ('ANT', 'Annuitant allowance'), ('UNE', 'Unemployment allowance'), ('HIA', 'Health insurance allowance'), ('HIF', 'Health insurance with Federal allowance'), ('FA', 'Federal allowance'), ('SOC', 'Social services allowance'), ('FAM', 'Family allowance'), ('RET', 'Retiring allowance'), ('NO', 'No income'), ('OTH', 'Other')], max_length=7, null=True, verbose_name='Income origin')),
                ('income_amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Income amount')),
                ('expenses', models.CharField(blank=True, max_length=255, null=True, verbose_name='Expenses')),
                ('debts', models.BooleanField(default=False, verbose_name='Debts')),
                ('attorney', models.BooleanField(default=True, verbose_name='Financial Power of Attorney')),
                ('management', models.CharField(blank=True, max_length=255, null=True, verbose_name='Financial Management')),
                ('admission', models.CharField(blank=True, choices=[('ISO', 'Isolated'), ('FAM', 'With own family'), ('PAR', 'With parents'), ('SHR', 'Roomsharing'), ('OTH_FAM', 'With other family or substitude'), ('RET', 'Retirement home'), ('DIS', 'Disabled care facility'), ('HM_LESS', 'Homeless shelter'), ('COM', 'Community housing'), ('JUS', 'Justice facility'), ('OTH_COM', 'Other community housing'), ('PS_HOSP', 'Psychiatric hospital'), ('PS_NURS', 'Psychiatric nursing home'), ('SLT', 'Shelter housing'), ('PLC', 'Family placement'), ('ALT_PS', 'Alternative psychiatric housing'), ('GEN', 'General hospital'), ('OTH_THE', 'Other therapeutic housing'), ('UNS', 'Unspecified'), ('UNK', 'Unknown')], max_length=7, null=True, verbose_name='Living Environment ad Admission')),
                ('occupation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Current Occupation')),
                ('career', models.CharField(blank=True, max_length=255, null=True, verbose_name='Professional Career')),
                ('education', models.CharField(blank=True, choices=[('NM', 'Normal'), ('SP', 'Special'), ('NN', 'None'), ('UN', 'Unknown')], max_length=7, null=True, verbose_name='Education')),
                ('edu_pathway', models.CharField(blank=True, choices=[('PR', 'Primary'), ('LHS', 'Lower high school'), ('HS', 'High school'), ('UN', 'University'), ('OTH', 'Other special education'), ('UNK', 'Unknown')], max_length=7, null=True, verbose_name='Education Pathway')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patients',
                'ordering': ('created',),
            },
        ),
    ]
