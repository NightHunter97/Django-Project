"""
Django settings for lifeline project.

Generated by 'django-admin startproject' using Django 1.11.15.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import datetime
import os

import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from celery.schedules import crontab
from corsheaders.defaults import default_headers

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')
SECURE_CONTENT_TYPE_NOSNIFF = True

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', False)
INTERNAL_IPS = ['127.0.0.1']
# APPEND_SLASH = False

CELERY_BEAT_SCHEDULE = {
    'expire_tasks': {
        'task': 'apps.tasks.tasks.expire_tasks',
        'schedule': crontab(minute=0, hour="*/3")
    },
}

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_WHITELIST = (
    'localhost:3000',
    'localhost:62192',
    'mylifeline.eu',
    'www.mylifeline.eu',
    'customer.mylifeline.eu',
    'customer.anadea.mylifeline.eu',
    'lifeline-front-dev.scenario-projects.com',
    'lifeline-front-stage.scenario-projects.com',
    'lifeline-front-preprod.scenario-projects.com',
    'railsapi.customer.anadea.mylifeline.eu',
)

CORS_ALLOW_HEADERS = default_headers + (
   'Validation', 'tzinfo', 'language'
)

REDIS_URL = os.getenv('REDIS_URL', 'redis://redis:6379')

CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Application definition

INSTALLED_APPS = [
    'material',
    'material.admin',

    'modeltranslation',
    'admin_view_permission',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'rest_framework',
    'rest_framework_swagger',
    'rest_auth',
    'corsheaders',
    'debug_toolbar',
    'storages',
    'django_cleanup',
    'django_extensions',
    'django_redis',
    'flower',
    'channels',
    'pydocx',

    'apps.units',
    'apps.accounts',
    'apps.patients',
    'apps._messages',
    'apps.tasks',
    'apps.vitals',
    'apps.wounds',
    'apps.medications',
    'apps.diagnostics',
    'apps.journal',
    'apps.evaluations',
    'apps.brusafe',
    'apps.reports',
    'apps.wish',
    'apps.documents',
]

SITE_ID = 1


MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'lifeline.middleware.LifeLineLocaleMiddleware',
    'lifeline.middleware.TimezoneMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'lifeline.middleware.UserActivityMiddleware',
]

ROOT_URLCONF = 'lifeline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'i18n_switcher': 'template_tags.i18n_switcher',

            }
        },
    },
]

WSGI_APPLICATION = 'lifeline.wsgi.application'
ASGI_APPLICATION = 'lifeline.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [REDIS_URL],
        },
    },
}

ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER': 'apps.accounts.serializers.AccountResetSerializer'
}

AUTH_USER_MODEL = 'accounts.User'

REST_USE_JWT = True
REST_FRAMEWORK = {
  'DEFAULT_AUTHENTICATION_CLASSES': (
    'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    'rest_framework.authentication.SessionAuthentication',
  ),
  'DEFAULT_PAGINATION_CLASS': 'lifeline.pagination.Pagination',
  'PAGE_SIZE': 10
}

SESSION_COOKIE_AGE = 64800

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=30),
    'JWT_REFRESH_TOKEN_EXPIRATION_DELTA': datetime.timedelta(days=100),
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'apps.accounts.utils.jwt_response_payload_handler'
}

SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        "JWT": {
          "description": "JWT in header to auth request session",
          "type": "apiKey",
          "name": "Authorization",
          "in": "header"
        },
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS_URL,
        'TIMEOUT': 86400,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

TRANSFER_PROTOCOL = os.environ.get('TRANSFER_PROTOCOL', 'https')

DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": lambda request: os.environ.get('SHOW_TOOLBAR_CALLBACK'),
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000

LOGIN_URL = 'admin:login'
LOGOUT_URL = 'admin:logout'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        env='DATABASE_URL',
        conn_max_age=(60 * 60)
    )
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'apps.accounts.password_validation.PasswordValidator',
    }
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('en', 'English'),
    ('fr', 'Fran√ßais'),
    ('nl', 'Hollandsk')
]
MODELTRANSLATION_LANGUAGES = ('en', 'fr', 'nl')
MODELTRANSLATION_FALLBACK_LANGUAGES = ('en', 'fr', 'nl')


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'lifeline', 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_S3_REGION_NAME = 'eu-central-1'
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_QUERYSTRING_AUTH = False
AWS_S3_FILE_OVERWRITE = True
AWS_STORAGE_LOCATION = 'media/private'

AWS_LOCATION = 'static'
DEFAULT_FILE_STORAGE = 'lifeline.storage_backends.PrivateMediaStorage'
AWS_PUBLIC_STATIC_LOCATION = 'static/'

EMAIL_BACKEND = 'django_ses.SESBackend'
DEFAULT_FROM_EMAIL = 'lifeline.product.care@gmail.com'
AWS_SES_REGION_NAME = 'eu-west-1'
AWS_SES_REGION_ENDPOINT = 'email.eu-west-1.amazonaws.com'

if TRANSFER_PROTOCOL == 'https':
    DEFAULT_FILE_STORAGE = 'lifeline.storage_backends.PublicStaticStorage'
    STATIC_URL = 'https://%s/%s' % (AWS_S3_CUSTOM_DOMAIN, AWS_PUBLIC_STATIC_LOCATION)
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

BRUSAFE_HOST = '//auth.qa.brusafe.be'
BRUSAFE_CLIENT_ID = os.getenv('BRUSAFE_CLIENT_ID', '<BRUSAFE_CLIENT_ID>')
BRUSAFE_CLIENT_SECRET = os.getenv('BRUSAFE_CLIENT_SECRET', '<BRUSAFE_CLIENT_SECRET>')
BRUSAFE_REDIRECT_URL = os.getenv('BRUSAFE_REDIRECT_URL', '<BRUSAFE_REDIRECT_URL>')
AWS_DEFAULT_ACL = None
