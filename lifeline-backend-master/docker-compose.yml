version: '3.3'

services:

  db:
    image: postgres:10.6
    environment:
      POSTGRES_USER: lifeline
      POSTGRES_PASSWORD: lifelineteam
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "54320:5432"

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/lifeline
    env_file:
      - ./lifeline/.env
    ports:
      - "8000:8000"
    networks:
      - public
    depends_on:
      - db
      - redis

  redis:
    image: redis:5.0.5
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  # celery:
  #   container_name: lifeline_celery
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile
  #   command: celery -A lifeline worker -l info
  #   env_file: "./lifeline/.env"
  #   volumes:
  #   - .:/lifeline
  #   links:
  #   - db
  #   - web

  # celery-beat:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile
  #   command: celery -A lifeline beat -l info
  #   env_file: "./lifeline/.env"
  #   volumes:
  #     - .:/lifeline
  #   depends_on:
  #     - db
  #     - redis

  # flower:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile
  #   command: flower -A lifeline
  #   env_file: "./lifeline/.env"
  #   volumes:
  #     - .:/lifeline
  #   ports:
  #     - "5555:5555"
  #   links:
  #     - db
  #     - redis

volumes:
  postgres-data:
  redis-data:
